# -*- coding: utf-8 -*-
"""AnalisedeDados.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v2oiVBBFwpyano7wzWuvXKhCpWezZs9W

## Analise de Dados - PASSO A PASSO PARA A SOLUÇÃO DO DESAFIO
"""

# importação das bibliotecas

import pandas as pd
import plotly.express as px

import smtplib
import email.message

# PASSO 0 - Entender o desafio que você quer resolver.
# PASSO 1 - Importar a base de dados da pasta(vendas).




tabela_vendas = pd.read_excel("/content/drive/MyDrive/Python para ciência de Dados/Vendas/Vendas+-+Base+de+Dados.xlsx")
display(tabela_vendas)

# PASSO 2 - Calcular o produto mais vendido (em quantidade).
tb_quantidade_produtos = tabela_vendas.groupby('Produto').sum()
tb_quantidade_produtos = tb_quantidade_produtos[['Quantidade', 'Valor Unitário']]
tb_quantidade_produtos = tb_quantidade_produtos.sort_values(by='Quantidade', ascending=False )
display(tb_quantidade_produtos)

# PASSO 3 - Calcular o produto mais vendido (em faturamento).

tabela_vendas['Faturamento'] = tabela_vendas['Quantidade'] * tabela_vendas['Valor Unitário']
tb_faturamento_produto = tabela_vendas.groupby('Produto').sum()
tb_faturamento_produto = tb_faturamento_produto[['Faturamento']].sort_values(by='Faturamento', ascending=False)
display(tb_faturamento_produto)

# PASSO 4 - Calcular a loja/estado que  mais vendeu (em faturamento)

tb_faturamento_loja = tabela_vendas.groupby('Loja').sum()
tb_faturamento_loja = tb_faturamento_loja[['Faturamento']].sort_values(by='Faturamento', ascending=False)
display(tb_faturamento_loja)

# PASSO 5 - Calcular o ticket médio por loja/estado.

tabela_vendas['Ticket Médio'] = tabela_vendas['Valor Unitário']
tb_ticket_medio = tabela_vendas.groupby('Loja').mean(numeric_only=True)
tb_ticket_medio = tb_ticket_medio[['Ticket Médio']]
tb_ticket_medio = tb_ticket_medio.sort_values(by='Ticket Médio', ascending=False)
display(tb_ticket_medio)

# PASSO 6 - Criar um grafico/dashboard da loja/estado que mais vendeu (em faturamento).



grafico = px.bar(tb_faturamento_loja, y='Faturamento', x=tb_faturamento_loja.index)
grafico.show()

"""# Formatações numéricas e monetárias

**Loja/Estado que mais vendeu (em faturamento)**
"""

from babel.numbers import format_currency

valor_formatado = format_currency(0,'BRL', locale='pt_BR')

from babel.numbers import format_currency

# Formatação monetária
tb_faturamento_loja_formatado = pd.DataFrame(tb_faturamento_loja['Faturamento'].apply(lambda x: format_currency(x, 'BRL', locale='pt_BR')))
tb_faturamento_loja_formatado = tb_faturamento_loja_formatado.reset_index()

# formatação HTML
tb_faturamento_loja_formatado_html = tb_faturamento_loja_formatado.to_html(index=False, justify='center', border=0).replace('<tbody>', '<tbody style="text-align: center; color:#484848; background:#F7F7F7">')



display(tb_faturamento_loja_formatado)
display(tb_faturamento_loja_formatado_html)

"""**Produtos mais vendidos (em quantidade)**"""

# Formatação numérica
tb_quantidade_produto_formatado = pd.DataFrame(tb_quantidade_produtos['Quantidade'].apply(lambda v: '{:,}'.format(v).replace(',', '.')))
tb_quantidade_produto_formatado = tb_quantidade_produto_formatado.reset_index()

# Formatação HTML
tb_quantidade_produto_formatado_html = tb_quantidade_produto_formatado.to_html(index=False, justify='center', border=0).replace('<tbody>', '<tbody style="text-align: center; color:#484848; background:#F7F7F7">')

display(tb_quantidade_produto_formatado)
display(tb_quantidade_produto_formatado_html)

"""**Produtos mais vendidos (em faturamento)**"""

# Formatação monetária

tb_faturamento_produto_formatado = pd.DataFrame(tb_faturamento_loja['Faturamento'].apply(lambda x: format_currency(x, 'BRL', locale='pt_BR')))
tb_faturamento_produto_formatado = tb_faturamento_produto_formatado.reset_index()

# Formatação HTML
tb_faturamento_produto_formatado_html = tb_faturamento_produto_formatado.to_html(index=False, justify='center', border=0).replace('<tbody>', '<tbody style="text-align: center; color:#484848; background:#F7F7F7">')

display(tb_faturamento_produto_formatado)
display(tb_faturamento_produto_formatado_html)

"""**Ticket Médio por Loja/Estado**"""

# Formatação monetária

tb_ticket_medio_formatado = pd.DataFrame(tb_ticket_medio['Ticket Médio'].apply(lambda x: format_currency(x, 'BRL', locale='pt_BR')))
tb_ticket_medio_formatado = tb_ticket_medio_formatado.reset_index()

#Formatação HTML
tb_ticket_medio_formatado_html = tb_ticket_medio_formatado.to_html(index=False, justify='center', border=0).replace('<tbody>', '<tbody style="text-align: center; color:#484848; background:#F7F7F7">')
display(tb_ticket_medio_formatado)
display(tb_ticket_medio_formatado_html)

"""**Enviar Relatório de Indicadores de Desempenho**"""

# PASSO 7 - Enviar um e-mail para o setor responsavel.




corpo_email = f"""
<p>Prezados,</p>

<p>Segue o relatório de vendas do mês.</p>

<p><b>Faturamento por loja:</b> </p>
<p>{tb_faturamento_loja_formatado_html}</p>

<p><b>Quantidade vendida por produtos:</b></p>
<p>{tb_quantidade_produto_formatado_html}</p>

<p><b>Faturamento por produto:</b></p>
<p>{tb_faturamento_produto_formatado_html}</P>

<p><b>Ticket Médio por loja:</P></b>
<p>{tb_ticket_medio_formatado_html}</b></p>

<p>Qualquer dúvida estou a disposição.</p>


<p>Att.</p>


<p>Leonardo</p>
"""
# configurações para envio
msg = email.message.Message()
msg['Subject'] = "Relatorio de Vendas" # Assunto do e-mail
msg['From'] = 'cruzdesouzaleonardo60@gmail.com' # E-mail que vai disparar o e-mail.
msg['To'] = 'berelps2@hotmail.com'# E-mail que vai receber.
password = 'zezquouemfvkjzer' # Senha do e-mail que vai enviar.
msg.add_header('Content-Type', 'text/html') # Tipo/formato do conteúdo.
msg.set_payload(corpo_email ) # Mensagem/corpo do e-mail.

# Configurações do servidor do Gmail.
s = smtplib.SMTP('smtp.gmail.com: 587')
s.starttls()

# Credenciais do login.
s.login(msg['From'], password)
s.sendmail(msg['From'], [msg['To']], msg.as_string().encode('utf-8'))
print('Email enviado')